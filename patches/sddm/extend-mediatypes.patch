commit 025e0bf9e0f4007ca5c282e3b6d1b854beab416c
Author: Edmund Wu <fangkazuto@gmail.com>
Date:   Thu May 30 17:23:01 2019 -0400

    sddm-sugar-dark: extend support mediatypes
    
    Support video files, albeit limited to avi, mkv, mov, mp4, and webm

diff --git a/Logic.js b/Logic.js
new file mode 100644
index 0000000..b7d4204
--- /dev/null
+++ b/Logic.js
@@ -0,0 +1,19 @@
+const background = config.Background;
+
+// Naive fetcher for media type
+function getMediaType (file) {
+  const videoFormats = [ "avi", "mkv", "mov", "mp4", "webm" ];
+  const imageFormats = [ "jpg", "jpeg", "png" ];
+
+  const fileExt = file.split(".").pop().toLowerCase();
+
+  return videoFormats.indexOf(fileExt) > -1
+    ? "video"
+    : imageFormats.indexOf(fileExt) > -1
+      ? "image"
+      : "image";
+}
+
+// "Exports"
+const isVideo = getMediaType(background) === "video";
+const isImage = getMediaType(background) === "image"; // Effectively just !isVideo
diff --git a/Main.qml b/Main.qml
index e38ddfb..6be5b85 100644
--- a/Main.qml
+++ b/Main.qml
@@ -20,7 +20,9 @@
 import QtQuick 2.11
 import QtQuick.Layouts 1.11
 import QtQuick.Controls 2.4
+import QtMultimedia 5.8
 import "Components"
+import "Logic.js" as Logic
 
 Pane{
     id: root
@@ -56,13 +58,48 @@ Pane{
             Layout.fillWidth: true
             Layout.fillHeight: true
             Image {
-                source: config.background || config.Background
+                source: Logic.isImage ? config.Background : ""
                 anchors.fill: parent
                 asynchronous: true
                 cache: true
                 fillMode: config.ScaleImageCropped == "true" ? Image.PreserveAspectCrop : Image.PreserveAspectFit
                 clip: true
                 mipmap: true
+                visible: Logic.isImage
+            }
+            Rectangle {
+                id: videoContainer
+                anchors.fill: parent
+                visible: Logic.isVideo
+                color: "#111"
+
+                // Preview background, visual "hack" to compensate for the delay between iterations
+                MediaPlayer {
+                    id: previewSource
+                    source: config.Background
+                    muted: true
+                    volume: 0.0
+                    onPositionChanged: { previewSource.pause(); }
+                }
+                VideoOutput {
+                    anchors.fill: parent
+                    source: previewSource
+                    fillMode: config.ScaleImageCropped == "true" ? VideoOutput.PreserveAspectCrop : VideoOutput.PreserveAspectFit
+                }
+                // The actual background always playing
+                MediaPlayer {
+                    id: videoSource
+                    source: config.Background
+                    autoPlay: true
+                    muted: true
+                    volume: 0.0
+                    loops: MediaPlayer.Infinite
+                }
+                VideoOutput {
+                    anchors.fill: parent
+                    source: videoSource
+                    fillMode: config.ScaleImageCropped == "true" ? VideoOutput.PreserveAspectCrop : VideoOutput.PreserveAspectFit
+                }
             }
             MouseArea {
                 anchors.fill: parent
