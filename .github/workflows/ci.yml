name: nixos-configuration

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  remove-old-artifacts:
    runs-on: ubuntu-latest

    steps:
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1.2.0
        with:
          age: '1 day'
          skip-recent: 4
          GITHUB_TOKEN: ${{ github.token }}

  images:
    needs: remove-old-artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 720
    strategy:
      fail-fast: false
      matrix:
        attr: [isoImage]

    steps:
      # Maximum storage with Nix
      - run: sudo rm -rf /opt /usr/local || true
      # WARNING: Needed due to GitHub Actions disk space regression on Linux runners
      - name: Obtain maximum storage
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=https://github.com/eadwu/nixpkgs/archive/develop.tar.gz
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Nix build
        run: |
          nix-shell -p nixFlakes --run \
            'nix build --print-build-logs --recreate-lock-file "$(pwd)#${{ matrix.attr }}"'
      - uses: actions/upload-artifact@v2.0.1
        continue-on-error: true
        with:
          name: ${{ matrix.attr }}
          path: result/iso/*.iso*
